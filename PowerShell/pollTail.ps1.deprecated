

function Poll-Tail{ 
    param (
            [Parameter(Mandatory=$true,Position=0)]
            [string] $fn, 
            [Parameter(Mandatory=$false,Position=1)]
            [Int32] $cnt = 30,
            [Parameter(Mandatory=$false,Position=2)]
            [Int32] $interval = 30
          )
    [DateTime]$startTime = Get-Date -Format g
    $prevLast = ""
    $msg =  "Last line of prev. poll in Yellow.  Log listing is rev. chron."
    $startMsg = [string]::Format("Polling started: {0}", $startTime.ToLongTimeString())
    $intMsg = [string]::Format("Polling interval: {0} secs", $interval);
    $ctrlC = "Ctrl-C to quit."
    $msg

        do
        {
            clear-host;
            Write-Host $msg
            Write-Host $startMsg
            Write-Host $intMsg
            Write-Host $ctrlC
            Write-Host "."
            Write-Host $prevLast -Foreground Yellow
            Write-Host "."
            # -Tail is new in PS 3.0
            $new = Get-Content $fn -Tail $cnt
            $prevLast = $new | Select-Object -Last 1

            [array]::Reverse($new)
            $new
            Start-Sleep -Seconds $interval
        } until ($false)
<#
    .SYNOPSIS 
      Displays last $cnt lines of $fn, every $interval seconds
      Ctrl-C to stop polling.

    .EXAMPLE
     pollTail jnk.log 12 30
     Get the last 12 lines of jnk.txt every 30 seconds

    .PARAMETER fn
     File to examine

    .PARAMETER cnt
     Number of lines to take (default = 30)

    .PARAMETER interval
     Number of seconds between polling (default = 30)

     .NOTES
     Note that the "Polling started" time is local, and may not align with the time on the monitored file.

#>
}
